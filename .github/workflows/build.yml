name: Build

on:
    workflow_dispatch:
        inputs:
          tag:
            description: 'Tag Name'
            required: true
          prerelease:
            description: 'Prerelease'
            type: boolean
            default: false
    push:
        branches:
            - dev
            - main

jobs:
    build-eaglercraft:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/setup-java@v4
              with:
                distribution: 'temurin' # See 'Supported distributions' for available options
                java-version: '21'
            - uses: actions/checkout@v4
              with:
                submodules: recursive
            - name: Build
              run: |
                  cd eaglergrab-source-compiler
                  echo "Building EPK..."
                  java -jar "desktopRuntime/CompileEPK.jar" "desktopRuntime/resources" "javascript/assets.epk"
                  echo "Finished Building EPK, continuing with JS"
                  chmod +x gradlew
                  ./gradlew generateJavascript --watch-fs --info
                  echo "Done building all scripts"
            - name: Generate general config
              run: |
                cd eaglergrab-source-compiler
                java -cp "desktopRuntime/MakeOfflineDownload.jar:desktopRuntime/CompileEPK.jar" net.lax1dude.eaglercraft.v1_8.buildtools.workspace.MakeOfflineDownload "../binary-templates/general.txt" "javascript/classes.js" "javascript/assets.epk" "javascript/EaglercraftX_1.8_Offline_en_US.html" "../binaries/latest.html" "javascript/lang"
                cat ../binaries/latest.html
            - name: Generate Arch
              run: |
                cd eaglergrab-source-compiler
                java -cp "desktopRuntime/MakeOfflineDownload.jar:desktopRuntime/CompileEPK.jar" net.lax1dude.eaglercraft.v1_8.buildtools.workspace.MakeOfflineDownload "../binary-templates/arch.txt" "javascript/classes.js" "javascript/assets.epk" "javascript/EaglercraftX_1.8_Offline_en_US.html" "../binaries/arch.html" "javascript/lang"
                cat ../binary-templates/arch.txt
            - name: Upload binaries
              uses: actions/upload-artifact@v4
              with:
                name: eaglercraftbuild
                path: |
                  binaries
    build-mac:
        runs-on: macos-latest
        needs: [build-eaglercraft]
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 20
            - name: Delete all
              run: |
                rm -rf binaries
            - uses: actions/download-artifact@v4
              with:
                name: eaglercraftbuild
                path: binaries
            - name: Install
              run: npm install
            - name: Build
              run: npm run build
            - name: Rename
              run: |
                cp dist/eaglergrab-1.0.0-arm64.dmg dist/release-mac.dmg
            - name: Upload
              uses: actions/upload-artifact@v4
              with:
                  name: release-mac.dmg
                  path: dist/release-mac.dmg
    build-win:
        runs-on: windows-latest
        needs: [build-eaglercraft]
        steps:
            - name: Delete all
              run: |
                ls
                rm binaries -r -fo
            - uses: actions/download-artifact@v4
              with:
                name: eaglercraftbuild
                path: binaries
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 20
            - name: Install
              run: npm install
            - name: Build
              run: npm run build
            - name: Rename
              run: |
                cp "dist/eaglergrab Setup 1.0.0.exe" dist/setup-win.exe
            - name: Upload
              uses: actions/upload-artifact@v4
              with:
                name: setup-win.exe
                path: dist/setup-win.exe
    build-linux:
        runs-on: ubuntu-latest
        needs: [build-eaglercraft]
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 20
            - name: Delete all
              run: |
                rm -rf binaries
            - uses: actions/download-artifact@v4
              with:
                name: eaglercraftbuild
                path: binaries
            - name: Install
              run: npm install
            - name: Build
              run: npm run build
            - name: Rename
              run: |
                cp dist/eaglergrab-1.0.0.AppImage dist/release-linux.AppImage
            - name: Upload
              uses: actions/upload-artifact@v4
              with:
                name: release-linux.AppImage
                path: dist/release-linux.AppImage
    release:
        runs-on: ubuntu-latest
        needs: [build-mac, build-win, build-linux]
        if: ${{ github.event_name == 'workflow_dispatch' }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Download Mac
              uses: actions/download-artifact@v4
              with:
                  name: release-mac.dmg
                  path: dist
            - name: Download Windows
              uses: actions/download-artifact@v4
              with:
                  name: setup-win.exe
                  path: dist
            - name: Download Linux
              uses: actions/download-artifact@v4
              with:
                  name: release-linux.AppImage
                  path: dist
            - name: Release
              uses: softprops/action-gh-release@v2.2.1
              with:
                  files: |
                    dist/release-mac.dmg
                    dist/setup-win.exe
                    dist/release-linux.AppImage
                  prerelease: ${{ github.event.inputs.prerelease }}
                  generate_release_notes: true
                  tag_name: ${{ github.event.inputs.tag }}
                  name: ${{ github.event.inputs.tag }}
